{"ast":null,"code":"var _jsxFileName = \"/Users/donghao/Documents/starlink/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\nimport { NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from \"../constants\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        settings: setting\n      });\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerElevation,\n        satAlt\n      } = setting;\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerElevation}/${satAlt}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n      });\n    };\n\n    this.showMap = selected => {\n      this.setState(preState => ({ ...preState,\n        satList: [...selected]\n      }));\n    };\n\n    this.state = {\n      satInfo: null,\n      settings: null,\n      satList: null,\n      isLoadingList: false\n    };\n  }\n\n  render() {\n    const {\n      satInfo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      satInfo: satInfo,\n      isLoad: this.state.isLoadingList,\n      onShowMap: this.showMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(WorldMap, {\n      satData: this.state.satList,\n      observerData: this.state.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/donghao/Documents/starlink/src/components/Main.js"],"names":["React","Component","axios","SatSetting","SatelliteList","WorldMap","NEARBY_SATELLITE","SAT_API_KEY","STARLINK_CATEGORY","Main","constructor","showNearbySatellite","setting","setState","settings","fetchSatellite","observerLat","observerLong","observerElevation","satAlt","url","isLoadingList","get","then","response","console","log","data","satInfo","catch","error","showMap","selected","preState","satList","state","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\nimport {NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY} from \"../constants\";\n\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {\n            satInfo: null,\n            settings: null,\n            satList: null,\n            isLoadingList: false\n        };\n    }\n\n    showNearbySatellite = (setting) => {\n        this.setState({\n            settings: setting\n        })\n        this.fetchSatellite(setting);\n    }\n\n    fetchSatellite = (setting) => {\n        const {observerLat, observerLong, observerElevation, satAlt} = setting;\n        const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerElevation}/${satAlt}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n\n        this.setState({\n            isLoadingList: true\n        });\n\n        axios.get(url)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    satInfo: response.data,\n                    isLoadingList: false\n                })\n            })\n            .catch(error => {\n                console.log('err in fetch satellite -> ', error);\n            })\n    }\n\n    showMap = (selected) => {\n        this.setState(preState => ({\n            ...preState,\n            satList: [...selected]\n        }))\n    }\n\n    render() {\n        const {satInfo} = this.state;\n        return (\n            <div className='main'>\n                <div className=\"left-side\">\n                    <SatSetting onShow={this.showNearbySatellite}/>\n                    <SatelliteList satInfo={satInfo}\n                                   isLoad={this.state.isLoadingList}\n                                   onShowMap={this.showMap}\n                    />\n                </div>\n                <div className=\"right-side\">\n                    <WorldMap satData={this.state.satList}\n                              observerData={this.state.settings}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}